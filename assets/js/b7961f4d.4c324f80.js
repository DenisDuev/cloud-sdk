"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[54,5789,7859,2514,9888,5537],{28747:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var a=t(74848),s=t(28453);const r={},i=void 0,o={id:"environments/code/Dockerfile",title:"Dockerfile",description:"",source:"@site/docs-js/environments/code/Dockerfile.mdx",sourceDirName:"environments/code",slug:"/environments/code/Dockerfile",permalink:"/cloud-sdk/docs/js/environments/code/Dockerfile",draft:!1,unlisted:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/environments/code/Dockerfile.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-Dockerfile",metastring:'title="Dockerfile"',children:'FROM node:14-alpine\n\nWORKDIR /workdir\n\nCOPY /deployment /workdir\n\nRUN ["npm", "install", "--unsafe-perm"]\n\nEXPOSE 3000\nCMD ["npm", "run", "start:prod"]\n'})})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},51504:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=t(74848),s=t(28453),r=t(12976),i=t(5594);const o={},c=void 0,l={id:"environments/code/kyma-app-tabs",title:"kyma-app-tabs",description:'<Tabs defaultValue="deployment"',source:"@site/docs-js/environments/code/kyma-app-tabs.mdx",sourceDirName:"environments/code",slug:"/environments/code/kyma-app-tabs",permalink:"/cloud-sdk/docs/js/environments/code/kyma-app-tabs",draft:!1,unlisted:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/environments/code/kyma-app-tabs.mdx",tags:[],version:"current",frontMatter:{}},d={},u=[];function p(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(r.A,{defaultValue:"deployment",values:[{label:"values.yaml",value:"values"},{label:"Chart.yaml",value:"Chart"},{label:"configmap.yaml",value:"configmap"},{label:"deployment.yaml",value:"deployment"},{label:"service.yaml",value:"service"}],children:[(0,a.jsx)(i.A,{value:"values",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"image:\n  repository: <YOUR_REPO>/k8s-e2e-app:latest # replace <YOUR_REPO> with your Docker repository\n  tag: latest\nresources:\n  requests:\n    memory: '256Mi'\n    cpu: '500m'\n  limits:\n    memory: '512Mi'\n    cpu: '1000m'\n"})})}),(0,a.jsx)(i.A,{value:"Chart",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v2\nname: app-chart\ndescription: A Helm chart for Kubernetes\n\n# A chart can be either an 'application' or a 'library' chart.\n#\n# Application charts are a collection of templates that can be packaged into versioned archives\n# to be deployed.\n#\n# Library charts provide useful utilities or functions for the chart developer. They're included as\n# a dependency of application charts to inject those utilities and functions into the rendering\n# pipeline. Library charts do not define any templates and therefore cannot be deployed.\ntype: application\n\n# This is the chart version. This version number should be incremented each time you make changes\n# to the chart and its templates, including the app version.\n# Versions are expected to follow Semantic Versioning (https://semver.org/)\nversion: 0.1.0\n\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application. Versions are not expected to\n# follow Semantic Versioning. They should reflect the version the application is using.\n# It is recommended to use it with quotes.\nappVersion: '1.0.0'\n"})})}),(0,a.jsx)(i.A,{value:"configmap",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ include "app-chart.fullname" . }}-config\ndata:\n  cloud_destination: {{ .Values.cloudDestination | quote }}\n  onpremise_destination: {{ .Values.onPremiseDestination | quote }}\n  principal_propagation_destination: {{ .Values.principalPropagationDestination | quote }}\n'})})}),(0,a.jsx)(i.A,{value:"service",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include "app-chart.fullname" . }}-svc\n  labels:\n    {{- include "app-chart.labels" . | nindent 4 }}\nspec:\n  ports:\n    - port: 8080\n      targetPort: 3000\n  selector:\n    {{- include "app-chart.selectorLabels" . | nindent 4 }}\n'})})}),(0,a.jsx)(i.A,{value:"deployment",className:"code-block-height-js thin-scrollbar",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: {{ include "app-chart.fullname" . }}\n  labels:\n    {{- include "app-chart.labels" . | nindent 4 }}\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      {{- include "app-chart.selectorLabels" . | nindent 6 }}\n  template:\n    metadata:\n      labels:\n        {{- include "app-chart.selectorLabels" . | nindent 8 }}\n    spec:\n      {{- with .Values.imagePullSecrets }}\n      imagePullSecrets:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n      serviceAccountName: {{ include "app-chart.serviceAccountName" . }}\n      containers:\n        - name: {{ .Chart.Name }}\n          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"\n          ports:\n            - containerPort: 3000\n          resources:\n            {{- toYaml .Values.resources | nindent 12 }}\n          env:\n            - name: CLOUD_DESTINATION\n              valueFrom:\n                configMapKeyRef:\n                  name: {{ include "app-chart.fullname" . }}-config\n                  key: cloud_destination\n            - name: ONPREMISE_DESTINATION\n              valueFrom:\n                configMapKeyRef:\n                  name: {{ include "app-chart.fullname" . }}-config\n                  key: onpremise_destination\n            - name: PRINCIPAL_PROPAGATION_DESTINATION\n              valueFrom:\n                configMapKeyRef:\n                  name: {{ include "app-chart.fullname" . }}-config\n                  key: principal_propagation_destination\n          volumeMounts:\n            - name: destination-volume\n              mountPath: {{ printf "/etc/secrets/sapcp/destination/%s" .Values.destinationBinding | quote }}\n              readOnly: true\n            - name: xsuaa-volume\n              mountPath: {{ printf "/etc/secrets/sapcp/xsuaa/%s" .Values.xsuaaBinding | quote }}\n              readOnly: true\n            - name: connectivity-volume\n              mountPath: {{ printf "/etc/secrets/sapcp/connectivity/%s" .Values.connectivityBinding | quote }}\n              readOnly: true\n      volumes:\n        - name: destination-volume\n          secret:\n            secretName: {{ .Values.destinationBinding | quote }}\n        - name: xsuaa-volume\n          secret:\n            secretName: {{ .Values.xsuaaBinding | quote }}\n        - name: connectivity-volume\n          secret:\n            secretName: {{ .Values.connectivityBinding | quote }}\n'})})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},36833:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=t(74848),s=t(28453),r=t(12976),i=t(5594);const o={},c=void 0,l={id:"environments/code/kyma-approuter-tabs",title:"kyma-approuter-tabs",description:'<Tabs defaultValue="deployment"',source:"@site/docs-js/environments/code/kyma-approuter-tabs.mdx",sourceDirName:"environments/code",slug:"/environments/code/kyma-approuter-tabs",permalink:"/cloud-sdk/docs/js/environments/code/kyma-approuter-tabs",draft:!1,unlisted:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/environments/code/kyma-approuter-tabs.mdx",tags:[],version:"current",frontMatter:{}},d={},u=[];function p(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(r.A,{defaultValue:"deployment",values:[{label:"values.yaml",value:"values"},{label:"Chart.yaml",value:"Chart"},{label:"configmap.yaml",value:"configmap"},{label:"deployment.yaml",value:"deployment"},{label:"service.yaml",value:"service"}],children:[(0,a.jsx)(i.A,{value:"values",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"xsuaaBinding:\n  config:\n    idp:\n    pattern:\n  image:\n    repository: <YOUR_REPO>/k8s-approuter:latest # replace <YOUR_REPO> with your Docker repository\n    tag: latest\n  resources:\n    requests:\n      memory: '256Mi'\n      cpu: '500m'\n    limits:\n      memory: '512Mi'\n      cpu: '1000m'\n"})})}),(0,a.jsx)(i.A,{value:"Chart",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v2\nname: approuter-chart\ndescription: A Helm chart for Kubernetes\n\n# A chart can be either an 'application' or a 'library' chart.\n#\n# Application charts are a collection of templates that can be packaged into versioned archives\n# to be deployed.\n#\n# Library charts provide useful utilities or functions for the chart developer. They're included as\n# a dependency of application charts to inject those utilities and functions into the rendering\n# pipeline. Library charts do not define any templates and therefore cannot be deployed.\ntype: application\n\n# This is the chart version. This version number should be incremented each time you make changes\n# to the chart and its templates, including the app version.\n# Versions are expected to follow Semantic Versioning (https://semver.org/)\nversion: 0.1.0\n\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application. Versions are not expected to\n# follow Semantic Versioning. They should reflect the version the application is using.\n# It is recommended to use it with quotes.\nappVersion: '1.0.0'\n"})})}),(0,a.jsx)(i.A,{value:"configmap",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ include "approuter-chart.fullname" . }}-config\ndata:\n  {{- if .Values.config.idp }}\n  xs-app.json: {{ printf "{\\"welcomeFile\\":\\"/web-pages/index.html\\",\\"routes\\":[{\\"source\\":\\"/backend-app/(.*)\\",\\"target\\":\\"$1\\",\\"destination\\":\\"backend\\",\\"identityProvider\\":\\"%s\\"},{\\"source\\":\\"/web-pages/(.*)\\",\\"target\\":\\"$1\\",\\"localDir\\":\\"static-resources\\",\\"identityProvider\\":\\"%s\\"}]}" .Values.config.idp .Values.config.idp | toPrettyJson }}\n  {{- else }}\n  xs-app.json: {{ .Values.config.json | toPrettyJson | quote }}\n  {{ end -}}\n'})})}),(0,a.jsx)(i.A,{value:"service",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include "approuter-chart.fullname" . }}-svc\n  labels:\n    {{- include "approuter-chart.labels" . | nindent 4 }}\nspec:\n  ports:\n    - port: 8080\n      targetPort: 5000\n  selector:\n    {{- include "approuter-chart.selectorLabels" . | nindent 4 }}\n'})})}),(0,a.jsx)(i.A,{value:"deployment",className:"code-block-height-js thin-scrollbar",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: {{ include "approuter-chart.fullname" . }}\n  labels:\n    {{- include "approuter-chart.labels" . | nindent 4 }}\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      {{- include "approuter-chart.selectorLabels" . | nindent 6 }}\n  template:\n    metadata:\n      labels:\n        {{- include "approuter-chart.selectorLabels" . | nindent 8 }}\n    spec:\n      {{- with .Values.imagePullSecrets }}\n      imagePullSecrets:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n      serviceAccountName: {{ include "approuter-chart.serviceAccountName" . }}\n      containers:\n        - name: {{ .Chart.Name }}\n          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"\n          ports:\n            - containerPort: 5000\n          resources:\n            {{- toYaml .Values.resources | nindent 12 }}\n          env:\n            - name: PORT\n              value: "5000"\n            - name: destinations\n              value: \'[{"name":"backend", "url":"http://{{ printf "%s-%s" .Release.Name "app-chart" | trunc 63 | trimSuffix "-" }}-svc:8080/", "forwardAuthToken": true}]\'\n            - name: TENANT_HOST_PATTERN\n              value: {{ .Values.config.pattern | quote }}\n          volumeMounts:\n            - name: xsuaa-volume\n              mountPath: {{ printf "/etc/secrets/sapcp/xsuaa/%s" .Values.xsuaaBinding | quote}}\n              readOnly: true\n            - name: approuter-volume\n              mountPath: "/usr/src/app/xs-app.json"\n              subPath: "xs-app.json"\n              readOnly: true\n      volumes:\n        - name: xsuaa-volume\n          secret:\n            secretName: {{ .Values.xsuaaBinding | quote}}\n        - name: approuter-volume\n          configMap:\n            name: {{ include "approuter-chart.fullname" . }}-config\n            items:\n              - key: xs-app.json\n                path: xs-app.json\n\n\n'})})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},1936:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var a=t(74848),s=t(28453);const r={},i=void 0,o={id:"environments/code/operator-destination-service",title:"operator-destination-service",description:"",source:"@site/docs-js/environments/code/operator-destination-service.mdx",sourceDirName:"environments/code",slug:"/environments/code/operator-destination-service",permalink:"/cloud-sdk/docs/js/environments/code/operator-destination-service",draft:!1,unlisted:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/environments/code/operator-destination-service.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="operator-destination-service.yml"',children:"apiVersion: services.cloud.sap.com/v1alpha1\nkind: ServiceInstance\nmetadata:\n  name: operator-destination-service\nspec:\n  serviceOfferingName: destination\n  servicePlanName: lite\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="operator-destination-binding.yml"',children:"apiVersion: services.cloud.sap.com/v1alpha1\nkind: ServiceBinding\nmetadata:\n  name: operator-destination-service\nspec:\n  serviceInstanceName: operator-destination-service\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},59782:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var a=t(74848),s=t(28453);const r={},i=void 0,o={id:"environments/code/operator-xsuaa-service",title:"operator-xsuaa-service",description:"",source:"@site/docs-js/environments/code/operator-xsuaa-service.mdx",sourceDirName:"environments/code",slug:"/environments/code/operator-xsuaa-service",permalink:"/cloud-sdk/docs/js/environments/code/operator-xsuaa-service",draft:!1,unlisted:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/environments/code/operator-xsuaa-service.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="operator-xsuaa-service.yml"',children:"apiVersion: services.cloud.sap.com/v1alpha1\nkind: ServiceInstance\nmetadata:\n  name: operator-xsuaa-service\nspec:\n  serviceOfferingName: xsuaa\n  servicePlanName: application\n  parameters:\n    xsappname: kubernetes-xsuaa\n    tenant-mode: shared\n    scopes:\n      - name: '$XSAPPNAME.Callback'\n        description: 'With this scope set, the callbacks for tenant onboarding, offboarding and getDependencies can be called.'\n        grant-as-authority-to-apps:\n          - $XSAPPNAME(application,sap-provisioning,tenant-onboarding)\n    role-templates:\n      - name: TOKEN_EXCHANGE\n        description: Token exchange\n        scope-references:\n          - uaa.user\n      - name: 'MultitenancyCallbackRoleTemplate'\n        description: 'Call callback-services of applications'\n        scope-references:\n          - '$XSAPPNAME.Callback'\n    oauth2-configuration:\n      grant-types:\n        - authorization_code\n        - client_credentials\n        - password\n        - refresh_token\n        - urn:ietf:params:oauth:grant-type:saml2-bearer\n        - user_token\n        - client_x509\n        - urn:ietf:params:oauth:grant-type:jwt-bearer\n      # Allowed redirect URIs in case you want to use an approuter behind an ingress for user login\n      redirect-uris:\n        - https://*/**\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="operator-xsuaa-binding.yml"',children:"apiVersion: services.cloud.sap.com/v1alpha1\nkind: ServiceBinding\nmetadata:\n  name: operator-xsuaa-service\nspec:\n  serviceInstanceName: operator-xsuaa-service\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},23263:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var a=t(74848),s=t(28453),r=t(12235);const i={id:"kubernetes",title:"Migrate your App from SAP BTP CF to Kubernetes with the SAP Cloud SDK for JavaScript",sidebar_label:"Kubernetes with SAP Gardener",description:"Learn how to migrate your application from SAP BTP Cloud Foundry to Kubernetes with the SAP Cloud SDK for JavaScript",keywords:["sap","cloud","sdk","cloud native","cloud sdk","sap cloud sdk","kubernetes"]},o="Migrate a Cloud Foundry Application to a Kubernetes Cluster",c={id:"environments/kubernetes",title:"Migrate your App from SAP BTP CF to Kubernetes with the SAP Cloud SDK for JavaScript",description:"Learn how to migrate your application from SAP BTP Cloud Foundry to Kubernetes with the SAP Cloud SDK for JavaScript",source:"@site/docs-js/environments/migrate-sdk-application-from-btp-cf-to-kubernetes.mdx",sourceDirName:"environments",slug:"/environments/kubernetes",permalink:"/cloud-sdk/docs/js/environments/kubernetes",draft:!1,unlisted:!1,editUrl:"https://github.com/SAP/cloud-sdk/edit/main/docs-js/environments/migrate-sdk-application-from-btp-cf-to-kubernetes.mdx",tags:[],version:"current",frontMatter:{id:"kubernetes",title:"Migrate your App from SAP BTP CF to Kubernetes with the SAP Cloud SDK for JavaScript",sidebar_label:"Kubernetes with SAP Gardener",description:"Learn how to migrate your application from SAP BTP Cloud Foundry to Kubernetes with the SAP Cloud SDK for JavaScript",keywords:["sap","cloud","sdk","cloud native","cloud sdk","sap cloud sdk","kubernetes"]},sidebar:"docsJsSidebar",previous:{title:"Shared ESLint configuration",permalink:"/cloud-sdk/docs/js/features/eslint-configuration"},next:{title:"Kubernetes with SAP Kyma",permalink:"/cloud-sdk/docs/js/environments/kyma"}},l={},d=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Create and Bind SAP BTP Services",id:"create-and-bind-sap-btp-services",level:3},{value:"Bind the Destination Service",id:"bind-the-destination-service",level:4},{value:"Bind the XSUAA Service",id:"bind-the-xsuaa-service",level:4},{value:"Deploy to Kubernetes",id:"deploy-to-kubernetes",level:2},{value:"Containerize the Application",id:"containerize-the-application",level:3},{value:"Create a Deployment Configuration",id:"create-a-deployment-configuration",level:3},{value:"Access Your Application",id:"access-your-application",level:3},{value:"Local Connection",id:"local-connection",level:4},{value:"Internet Facing Connection",id:"internet-facing-connection",level:4},{value:"Configure TLS and Obtain a Domain in SAP Gardener",id:"configure-tls-and-obtain-a-domain-in-sap-gardener",level:3},{value:"Expose the Application using Approuter",id:"expose-the-application-using-approuter",level:3},{value:"Principal Propagation",id:"principal-propagation",level:2},{value:"On-Premise Connectivity",id:"on-premise-connectivity",level:2},{value:"Create a Continuous Integration Pipeline",id:"create-a-continuous-integration-pipeline",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"migrate-a-cloud-foundry-application-to-a-kubernetes-cluster",children:"Migrate a Cloud Foundry Application to a Kubernetes Cluster"}),"\n",(0,a.jsxs)(n.p,{children:["This guide details the steps necessary to migrate an application from Cloud Foundry to a Gardener-based Kubernetes cluster.\nThe samples repository contains the ",(0,a.jsx)(n.a,{href:"https://github.com/SAP-samples/cloud-sdk-js/tree/main/samples/k8s-sample-application",children:"Kubernetes application"})," that will be used in this guide."]}),"\n",(0,a.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Install ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tools/",children:(0,a.jsx)(n.code,{children:"kubectl"})}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Install ",(0,a.jsx)(n.a,{href:"https://docs.docker.com/get-docker/",children:(0,a.jsx)(n.code,{children:"docker"})})," and ensure access to a publicly reachable Docker repository."]}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsxs)(n.p,{children:["A Kubernetes cluster uses a secret to authenticate with a container registry to pull an image.\nFor that, you will need to ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-secret-by-providing-credentials-on-the-command-line",children:"configure a secret in your cluster"}),":"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl create secret docker-registry regcred --docker-server=YOUR_DOCKER_SERVER --docker-username=YOUR_DOCKER_USERNAME --docker-password=YOUR_DOCKER_PASSWORD --docker-email=YOUR_DOCKER_EMAIL\n"})})]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Use ",(0,a.jsx)(n.a,{href:"https://dashboard.garden.canary.k8s.ondemand.com/",children:"Gardener"})," for a Kubernetes Cluster with a load balancer enabled."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["This guide assumes you have created a cluster via Gardener dashboard and have it set up for cluster access.\nWe also recommend to have an ",(0,a.jsx)(n.strong,{children:"Ingress"})," set up that exposes the application to the internet."]})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Install ",(0,a.jsx)(n.a,{href:"https://helm.sh/docs/intro/install/",children:(0,a.jsx)(n.code,{children:"helm"})}),", a package manager for Kubernetes."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Install the ",(0,a.jsx)(n.a,{href:"https://github.com/SAP/sap-btp-service-operator/",children:"SAP BTP Service Operator"})," in the cluster."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["For production environments, you need a reliable way of configuring which services are running in your cluster.\nTo achieve that, leverage the SAP BTP Service Operator.\nThis guide assumes you have the SAP BTP Service Operator installed in your cluster.\nIf not, follow the setup instructions ",(0,a.jsx)(n.a,{href:"https://github.com/SAP/sap-btp-service-operator#setup",children:"here"}),"."]})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"create-and-bind-sap-btp-services",children:"Create and Bind SAP BTP Services"}),"\n",(0,a.jsx)(n.p,{children:"Since the service operator is running in your cluster, you can create services just like you would do in SAP BTP CF, but instead of the SAP BTP cockpit, you'll use YAML service definitions.\nFor this guide, we'll assume the application uses two services:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Destination Service"}),"\n",(0,a.jsx)(n.li,{children:"XSUAA Service"}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"bind-the-destination-service",children:"Bind the Destination Service"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Create ",(0,a.jsx)(n.code,{children:"yaml"})," files for the destination service instance and binding:"]}),"\n"]}),"\n",(0,a.jsx)(r.WL,{}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsx)(n.li,{children:"Install the configuration using the commands:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f operator-destination-service.yml\nkubectl apply -f operator-destination-binding.yml\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This should create a Kubernetes secret named ",(0,a.jsx)(n.code,{children:"operator-destination-service"}),".\nThis secret will contain the actual service binding information."]}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsxs)(n.li,{children:["Monitor the status via ",(0,a.jsx)(n.code,{children:"kubectl describe ServiceInstance operator-destination-service"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"bind-the-xsuaa-service",children:"Bind the XSUAA Service"}),"\n",(0,a.jsxs)(n.p,{children:["Create ",(0,a.jsx)(n.code,{children:"yaml"})," files for the XSUAA service instance and binding:"]}),"\n",(0,a.jsx)(r.aQ,{}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["Repeat steps 2 and 3 from the ",(0,a.jsx)(n.a,{href:"#bind-the-destination-service",children:"previous section"})," for the XSUAA service.\nReplace ",(0,a.jsx)(n.code,{children:"destination"})," with ",(0,a.jsx)(n.code,{children:"xsuaa"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["We will see how to mount the created secrets into the file system of the application in the ",(0,a.jsx)(n.a,{href:"#create-a-deployment-configuration",children:"deployment configuration"})," step."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["Notice that the ",(0,a.jsx)(n.code,{children:"metadata -> name"})," property can be anything you want.\nIn this case, it's ",(0,a.jsx)(n.code,{children:"operator-destination-service"}),".\nMake sure it matches exactly to the ",(0,a.jsx)(n.code,{children:"spec -> serviceInstanceName"})," field in the binding."]})}),"\n",(0,a.jsx)(n.h2,{id:"deploy-to-kubernetes",children:"Deploy to Kubernetes"}),"\n",(0,a.jsx)(n.p,{children:"This section covers the following:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"How to deploy an application to Kubernetes."}),"\n",(0,a.jsx)(n.li,{children:"How to consume the bound services in the application from within the cluster."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"containerize-the-application",children:"Containerize the Application"}),"\n",(0,a.jsxs)(n.p,{children:["Create a ",(0,a.jsx)(n.code,{children:"Dockerfile"})," defining a container for the application.\nThen it can be deployed to one or more Kubernetes Pods."]}),"\n",(0,a.jsx)(r.xV,{}),"\n",(0,a.jsx)(n.p,{children:"Compile and push the image by running:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker build -t <YOUR_REPO>/<YOUR_IMAGE_NAME>:<YOUR_TAG> .\ndocker push <YOUR_REPO>/<YOUR_IMAGE_NAME>:<YOUR_TAG>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"create-a-deployment-configuration",children:"Create a Deployment Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["Create a ",(0,a.jsx)(n.code,{children:"deployment.yml"})," file as shown below:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="app/deployment.yml"',children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: sdkjs-e2e-deployment\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: sdkjs-e2e\n  template:\n    metadata:\n      labels:\n        app: sdkjs-e2e\n    spec:\n      containers:\n        - name: sdkjs-e2e\n          image: <YOUR_REPO>/k8s-e2e-app:latest\n          resources:\n            requests:\n              memory: '256Mi'\n              cpu: '500m'\n            limits:\n              memory: '512Mi'\n              cpu: '1000m'\n          ports:\n            - containerPort: 3000\n          volumeMounts:\n            - name: destination-volume\n              mountPath: '/etc/secrets/sapcp/destination/operator-destination-service'\n              readOnly: true\n            - name: xsuaa-volume\n              mountPath: '/etc/secrets/sapcp/xsuaa/operator-xsuaa-service'\n              readOnly: true\n      imagePullSecrets:\n        - name: regcred\n      volumes:\n        - name: destination-volume\n          secret:\n            secretName: operator-destination-service\n        - name: xsuaa-volume\n          secret:\n            secretName: operator-xsuaa-service\n"})}),"\n",(0,a.jsx)(n.p,{children:"The file contains the following data:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Resources definition"}),": The ",(0,a.jsx)(n.code,{children:"requests"})," field specifies the CPU and memory requirements of the app.\nAdditionally, the resources can scale based on the values provided in the ",(0,a.jsx)(n.code,{children:"limits"})," field."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Service bindings"}),": the volumes ",(0,a.jsx)(n.code,{children:"destination-volume"})," and ",(0,a.jsx)(n.code,{children:"xsuaa-volume"})," reference the secrets (service bindings).\nThe volumes are mounted into the file system of your application at a specific path by adding them to the list of ",(0,a.jsx)(n.code,{children:"volumeMounts"})," in the ",(0,a.jsx)(n.code,{children:"containers"})," section.","\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["The path convention is provided by the ",(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/@sap/xsenv",children:"xsenv"})," library."]})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Container image and registry secrets"}),": ",(0,a.jsx)(n.code,{children:"regcred"})," secret used by the ",(0,a.jsx)(n.code,{children:"imagePullSecrets"})," config contains your registry credentials that you bound as a secret (in case the image was pushed to a private repository)."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Deploy the application by running the command:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"kubectl apply -f deployment.yml"})}),"\n",(0,a.jsx)(n.h3,{id:"access-your-application",children:"Access Your Application"}),"\n",(0,a.jsx)(n.p,{children:"To access the application, you have two options.\nEither expose it to the internet directly or port-forward to your local machine."}),"\n",(0,a.jsx)(n.h4,{id:"local-connection",children:"Local Connection"}),"\n",(0,a.jsxs)(n.p,{children:["Run the command ",(0,a.jsx)(n.code,{children:"kubectl port-forward deployment YOUR_DEPLOYMENT :3000"})," on your local machine to enable port forwarding.\nYour application will listen to port 3000.\nKubernetes finds an available port on your local machine and forwards port 3000 of your deployment to it.\nMake a call to the application via a provided link."]}),"\n",(0,a.jsx)(n.h4,{id:"internet-facing-connection",children:"Internet Facing Connection"}),"\n",(0,a.jsx)(n.admonition,{type:"danger",children:(0,a.jsxs)(n.p,{children:["Exposing an application this way is good only for testing.\n",(0,a.jsx)(n.strong,{children:"Don't use it in production."})]})}),"\n",(0,a.jsx)(n.p,{children:"Run the command below to expose the application to the internet.\nIt will use the cluster's IP address and the port the application listens on."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:'kubectl expose deployment YOUR_DEPLOYMENT --type="LoadBalancer"'})}),"\n",(0,a.jsx)(n.h3,{id:"configure-tls-and-obtain-a-domain-in-sap-gardener",children:"Configure TLS and Obtain a Domain in SAP Gardener"}),"\n",(0,a.jsxs)(n.p,{children:["If you want to expose your cluster under a domain name with TLS, check out the steps below or follow the official Kubernetes ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster/",children:"documentation"})," for a general setup."]}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{children:(0,a.jsx)(n.strong,{children:"Prerequisite"})}),(0,a.jsx)(n.p,{children:"Enable the NGINX Ingress add-on for your SAP Gardener cluster."})]}),"\n",(0,a.jsx)(n.p,{children:"The fastest way to enable TLS and obtain a domain for your application is to create a Service for your Deployment, and an Ingress to handle the routing.\nCreate a Service that contains your Deployment and the port you want to expose as shown in the example below:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="app/k8s-e2e-service.yml"',children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: sdkjs-e2e-svc\nspec:\n  selector:\n    app: sdkjs-e2e\n  ports:\n    - port: 8080\n      targetPort: 3000\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Check your shoot cluster's ",(0,a.jsx)(n.code,{children:"kubeconfig.yaml"})," for the configured DNS, which should be located in your Gardener project's dashboard, under the YAML tab.\nIt should be a field that looks like this:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"spec:\n  dns:\n    domain: cloud-sdk-js.sdktests.shoot.canary.k8s-hana.ondemand.com\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Since the NGINX Ingress is enabled, all domains have to follow the pattern ",(0,a.jsx)(n.code,{children:"*.ingress.YOUR_DNS"}),", for example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"e2e.ingress.cloud-sdk-js.sdktests.shoot.canary.k8s-hana.ondemand.com\n"})}),"\n",(0,a.jsx)(n.p,{children:"This is how the Ingress configuration file should look like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="ingress.yml"',children:'apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: sdkjs-e2e-ingress\n  annotations:\n    cert.gardener.cloud/purpose: managed\nspec:\n  tls:\n    - hosts:\n        - cloud-sdk-js.sdktests.shoot.canary.k8s-hana.ondemand.com # - "<YOUR_DNS>"\n        - e2e.ingress.cloud-sdk-js.sdktests.shoot.canary.k8s-hana.ondemand.com # - "*.ingress.<YOUR_DNS>"\n      secretName: secret-tls\n  rules:\n    - host: e2e.ingress.cloud-sdk-js.sdktests.shoot.canary.k8s-hana.ondemand.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: sdkjs-e2e-svc\n                port:\n                  number: 8080\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Notice how the Ingress uses the annotation ",(0,a.jsx)(n.code,{children:"cert.gardener.cloud/purpose: managed"}),", which is important so that SAP Gardener manages TLS."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"spec.tls.hosts"})," config exposes 2 domains.\nThe first one is your default domain, limited to a maximum of 64 characters.\nOther domains can be any size, but should follow the Ingress pattern."]}),"\n",(0,a.jsxs)(n.p,{children:["The field ",(0,a.jsx)(n.code,{children:"secretName: secret-tls"})," in the configuration implies that all TLS certificates will be saved by SAP Gardener.\nFinally, look at how to serve the Service at the root of your subdomain.\nThis way the Service is exposed to the internet using TLS."]}),"\n",(0,a.jsx)(n.h3,{id:"expose-the-application-using-approuter",children:"Expose the Application using Approuter"}),"\n",(0,a.jsxs)(n.p,{children:["In the next steps, you will configure and deploy an approuter so that only users authenticated by your identity provider can access the application endpoints.\nFor that, create a ",(0,a.jsx)(n.a,{href:"https://github.com/SAP-samples/cloud-sdk-js/tree/main/samples/k8s-sample-application/approuter",children:"simple application"})," that uses the @sap/approuter."]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Package the application router as a docker image so that it can run in Kubernetes, refer to the ",(0,a.jsx)(n.a,{href:"https://blogs.sap.com/2020/04/03/sap-application-router/",children:"documentation"})," for configuration details."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Create a Kubernetes Deployment and a Kubernetes Service to run and expose the application router."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="approuter/deployment.yml"',children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: approuter\n  labels:\n    app: approuter\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: approuter\n  template:\n    metadata:\n      labels:\n        app: approuter\n    spec:\n      containers:\n        - image: <YOUR_REPO>/k8s-approuter:latest\n          resources:\n            requests:\n              memory: '256Mi'\n              cpu: '250m'\n            limits:\n              memory: '512Mi'\n              cpu: '500m'\n          name: approuter\n          volumeMounts:\n            - name: xsuaa-volume\n              mountPath: '/etc/secrets/sapcp/xsuaa/operator-xsuaa-service'\n              readOnly: true\n          env:\n            - name: PORT\n              value: '5000'\n            - name: destinations\n              value: '[{\"name\":\"backend\", \"url\":\"http://sdkjs-e2e-svc:8080/\", \"forwardAuthToken\": true}]'\n      imagePullSecrets:\n        - name: regcred\n      volumes:\n        - name: xsuaa-volume\n          secret:\n            secretName: operator-xsuaa-service\n"})}),"\n",(0,a.jsx)(n.p,{children:"It references the application running in your cluster.\nInstead of an Ingress endpoint, it directly points to the Service.\nThis is possible because the application router runs in your cluster and can therefore use the Kubernetes native Service discovery."}),"\n",(0,a.jsx)(n.p,{children:"The Service configuration:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="approuter/approuter-service.yml"',children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: approuter-svc\n  labels:\n    app: approuter\nspec:\n  ports:\n    - port: 8080\n      targetPort: 5000\n  selector:\n    app: approuter\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"4",children:["\n",(0,a.jsxs)(n.li,{children:["Finally, configure the Ingress to create a session cookie that is consumed by the application router.\nSet the ",(0,a.jsx)(n.code,{children:"backend.service.name"})," to ",(0,a.jsx)(n.code,{children:"approuter-svc"})," to point the Ingress to the ",(0,a.jsx)(n.code,{children:"approuter"})," Service.\nTo secure your application, remove all previous routes that pointed to your application's endpoints and only expose them through the application router.\nFor that, specify the Service names in your approuter destinations' configuration and remove the rules you previously created for these endpoints in the Ingress."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Depending on the Ingress controller, you have to use different annotations.\nAn Ingress that only exposes the application router and uses the annotations is shown in the following example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="ingress.yml"',children:"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: sdkjs-e2e-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/affinity: 'cookie'\n    nginx.ingress.kubernetes.io/proxy-read-timeout: '600'\n    nginx.ingress.kubernetes.io/session-cookie-name: 'JSESSIONID'\n    cert.gardener.cloud/purpose: managed\nspec:\n  tls:\n    - hosts:\n        - cloud-sdk-js.sdktests.shoot.canary.k8s-hana.ondemand.com\n        - e2e.ingress.cloud-sdk-js.sdktests.shoot.canary.k8s-hana.ondemand.com\n      secretName: secret-tls\n  rules:\n    - host: e2e.ingress.cloud-sdk-js.sdktests.shoot.canary.k8s-hana.ondemand.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: approuter-svc\n                port:\n                  number: 8080\n"})}),"\n",(0,a.jsx)(n.h2,{id:"principal-propagation",children:"Principal Propagation"}),"\n",(0,a.jsxs)(n.p,{children:["Just as in SAP BTP Cloud Foundry, you have to collect the principal's JSON web token (JWT) from the authentication header after executing one of the requests with the typed client libraries.\nThe example below uses the ",(0,a.jsx)(n.code,{children:"retrieveJwt()"})," function:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { Injectable } from '@nestjs/common';\nimport { retrieveJwt } from '@sap-cloud-sdk/connectivity';\nimport { Request } from 'express';\nimport { businessPartnerService } from './generated/business-partner-service';\n\n@Injectable()\nexport class PrincipalBusinessPartnerService {\n  async getFiveBusinessPartners(request: Request): Promise<BusinessPartner[]> {\n    return BusinessPartner.requestBuilder()\n      .getAll()\n      .top(5)\n      .execute({\n        destinationName: 'MY-DESTINATION',\n        jwt: retrieveJwt(request)\n      });\n  }\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"on-premise-connectivity",children:"On-Premise Connectivity"}),"\n",(0,a.jsx)(n.admonition,{type:"danger",children:(0,a.jsx)(n.p,{children:"On-Premise connectivity in Kubernetes is not available for SAP customers as of July 2023."})}),"\n",(0,a.jsx)(n.p,{children:"You need a connectivity proxy to connect to on-premise systems inside a Kubernetes cluster.\nThe following steps show how to create and use it."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Create a route with TLS enabled for the connectivity proxy.\nTo enable TLS on SAP Gardener, refer to the ",(0,a.jsx)(n.a,{href:"#configure-tls-and-obtain-a-domain-in-sap-gardener",children:'"Configure TLS and Obtain a Domain in SAP Gardener"'})," section.\nIf your cluster is not backed by SAP Gardener, refer to the official ",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster/",children:"Kubernetes documentation"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["This example shows how to add the custom domain ",(0,a.jsx)(n.code,{children:"connectivitytunnel.*"})," to the TLS section in SAP Gardener.\nThis creates a certificate for this domain automatically."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"spec:\n  tls:\n    - hosts:\n        - cloud-sdk-js.sdktests.shoot.canary.k8s-hana.ondemand.com\n        - e2e.ingress.cloud-sdk-js.sdktests.shoot.canary.k8s-hana.ondemand.com\n        - connectivitytunnel.ingress.cloud-sdk-js.sdktests.shoot.canary.k8s-hana.ondemand.com\n      secretName: secret-tls\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["Add your CA certificate to the JVM trust store of the SAP Cloud Connector.\nThe CA certificate is stored in the TLS secret, in this case the name is ",(0,a.jsx)(n.code,{children:"secret-tls"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"To access the information inside a secret, use the following code snippet:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'kubectl get secret YOUR_SECRET -o go-template=\'{{range $k,$v := .data}}{{printf "%s: " $k}}{{if not $v}}{{$v}}{{else}}{{$v | base64decode}}{{end}}{{"\\n"}}{{end}}\'\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Inside the secret should be a block prefixed with ",(0,a.jsx)(n.code,{children:"ca.crt"}),".\nCopy this certificate into a file and then follow ",(0,a.jsx)(n.a,{href:"https://connect2id.com/blog/importing-ca-root-cert-into-jvm-trust-store",children:"this guide"})," to add it to the JVM trust store of your SAP Cloud Connector."]}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Create and bind the connectivity service with the ",(0,a.jsx)(n.code,{children:"connectivty_proxy"})," plan following the steps shown ",(0,a.jsx)(n.a,{href:"#bind-the-destination-service",children:"before"}),".\nAdditionally, to bind the secret represented by Kubernetes native YAML format, you need to convert it to JSON format for the connectivity proxy to consume it.\nUse the code snippet in step (2) above to retrieve the values of the secret."]}),"\n",(0,a.jsx)(n.p,{children:"Here is an example JSON secret:"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Secret\nmetadata:\n  name: connectivity-proxy-service-key\ntype: Opaque\nstringData:\n  connectivity_key: \'{\n    "clientid": "YOUR_CLIENT_ID",\n    "clientsecret": "YOUR_CLIENT_SECRET",\n    "xsappname": "YOUR_XS_APP_NAME",\n    "connectivity_service": {\n        "CAs_path":"/api/v1/CAs",\n        "CAs_signing_path":"/api/v1/CAs/signing",\n        "api_path":"/api/v1",\n        "tunnel_path":"/api/v1/tunnel",\n        "url":"https://connectivity.cf.sap.hana.ondemand.com"\n    },\n    "subaccount_id": "YOUR_SUBACCOUNT_ID",\n    "subaccount_subdomain": "YOUR_SUBACCOUNT_SUBDOMAIN",\n    "token_service_domain": "YOUR_TOKEN_SERVICE_DOMAIN",\n    "token_service_url": "YOUR_TOKEN_SERVICE_URL",\n    "token_service_url_pattern": "https://{tenant}.authentication.sap.hana.ondemand.com/oauth/token",\n    "token_service_url_pattern_tenant_key": "subaccount_subdomain"\n}\'\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["Note that the example used the ",(0,a.jsx)(n.code,{children:"stringData"})," field type instead of the default ",(0,a.jsx)(n.code,{children:"data"})," field type to benefit from automatic base64 encoding.\nThis is a requirement of the connectivity proxy since it can't consume the data of the secret in YAML format."]})}),"\n",(0,a.jsxs)(n.ol,{start:"4",children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Download the CA certificate of the connectivity service and create a secret that includes:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"the CA certificate of the connectivity service"}),"\n",(0,a.jsx)(n.li,{children:"your private key"}),"\n",(0,a.jsx)(n.li,{children:"your public certificate"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The private key and public certificate are also stored in the TLS secret.\nUse the previous code snippet to retrieve it from the secret and save them in separate files.\nFinally, download the CA certificate with the following line:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl https://connectivity.cf.sap.hana.ondemand.com/api/v1/CAs/signing -o connectivity_ca.crt\n"})}),"\n",(0,a.jsx)(n.p,{children:"Now, create the secret with this command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl create secret generic connectivity-tls --from-file=ca.crt=YOUR_CONNECTIVITY_CA_KEY.crt --from-file=tls.key=YOUR_PRIVATE_KEY.key --from-file=tls.crt=YOUR_PUBLIC_KEY.crt --namespace default\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"5",children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Create a secret that contains credentials to access the docker image which the connectivity proxy is using."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Create a ",(0,a.jsx)(n.code,{children:"values.yaml"})," file containing the configuration that suits your desired operational mode of the connectivity proxy, for the available operational modes refer to the ",(0,a.jsx)(n.a,{href:"https://help.sap.com/viewer/cca91383641e40ffbe03bdc78f00f681/Cloud/en-US/f3c1ef45db77489c8d039acc9530358f.html",children:"documentation"}),".\nFor the specific content of the configuration refer to the ",(0,a.jsx)(n.a,{href:"https://help.sap.com/viewer/cca91383641e40ffbe03bdc78f00f681/Cloud/en-US/eaa8204fc7484df984b3c321624827ff.html",children:"configuration guide"}),"."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:'Here is an example for the "single tenant in a trusted environment" mode:'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"deployment:\n  replicaCount: 1\n  image:\n    pullSecret: 'proxy-secret'\ningress:\n  tls:\n    secretName: 'connectivity-tls'\nconfig:\n  integration:\n    auditlog:\n      mode: console\n    connectivityService:\n      serviceCredentialsKey: 'connectivity_key'\n  tenantMode: dedicated\n  subaccountId: 'YOUR_SUBACCOUNT_ID'\n  subaccountSubdomain: 'YOUR_SUBACCOUNT_SUBDOMAIN'\n  servers:\n    businessDataTunnel:\n      externalHost: 'connectivitytunnel.ingress.cloud-sdk-js.sdktests.shoot.canary.k8s-hana.ondemand.com'\n      externalPort: 443\n    proxy:\n      rfcAndLdap:\n        enabled: true\n        enableProxyAuthorization: false\n      http:\n        enabled: true\n        enableProxyAuthorization: false\n        enableRequestTracing: true\n      socks5:\n        enableProxyAuthorization: false\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"7",children:["\n",(0,a.jsxs)(n.li,{children:["For your application to reach on-premise destinations, it needs to provide the proxy settings and the token URL.\nAdd them manually to the ",(0,a.jsx)(n.code,{children:"secret"})," containing the service binding using the following code snippet:"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl edit secret YOUR_BINDING\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Now add the fields ",(0,a.jsx)(n.code,{children:"onpremise_proxy_host"})," and ",(0,a.jsx)(n.code,{children:"onpremise_proxy_port"})," and ",(0,a.jsx)(n.code,{children:"url"}),".\nThe host has the pattern ",(0,a.jsx)(n.code,{children:"connectivity-proxy.YOUR_NAMESPACE"})," which in this case is ",(0,a.jsx)(n.code,{children:"connectivity-proxy.default"}),".\nThe default port is ",(0,a.jsx)(n.code,{children:"20003"}),".\nThe ",(0,a.jsx)(n.code,{children:"url"})," field should contain the same value as ",(0,a.jsx)(n.code,{children:"token_service_url"}),".\nBe aware that the values have to be encoded in base64, for example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"onpremise_proxy_host: Y29ubmVjdGl2aXR5LXByb3h5LmRlZmF1bHQ=\nonpremise_proxy_port: MjAwMDM=\nurl: aHR0cHM6Ly9teS1hcGkuYXV0aGVudGljYXRpb24uc2FwLmhhbmEub25kZW1hbmQuY29tCg==\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"8",children:["\n",(0,a.jsxs)(n.li,{children:["Finally, add the binding to your ",(0,a.jsx)(n.code,{children:"deployment.yml"}),", the same way you would add any other binding."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"create-a-continuous-integration-pipeline",children:"Create a Continuous Integration Pipeline"}),"\n",(0,a.jsx)(n.p,{children:"You can create a simple CI/CD pipeline with GitHub Actions or change your existing pipeline.\nFollow the steps below to create a service account and obtain the authentication tokens and certificates needed to interact with your cluster within the pipeline."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/access-authn-authz/service-accounts-admin/",children:"Create a service account"})," in your cluster."]}),"\n",(0,a.jsxs)(n.li,{children:["Bind the ",(0,a.jsx)(n.code,{children:"cluster-admin"})," cluster role to the service account.\nAlternatively, create a more strict role."]}),"\n",(0,a.jsx)(n.li,{children:"Obtain the token and CA certificate from the secret that is automatically created for that service account."}),"\n",(0,a.jsxs)(n.li,{children:["Obtain the cluster API endpoint via command ",(0,a.jsx)(n.code,{children:"kubectl cluster-info"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Use the service account in your automation to connect to the cluster:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl config set-cluster gardener --server=YOUR_CLUSTER_API_ENDPOINT\nkubectl config set-context gardener --cluster=gardener\nkubectl config use-context gardener\nkubectl config view\nkubectl --token=${{ secrets.KUBERNETES_SERVICE_TOKEN }} --certificate-authority YOUR_CA_CERT_PATH cluster-info\n"})}),"\n",(0,a.jsx)(n.p,{children:"After completing the previous steps, run the command below to shutdown and restart all the Pods."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl --token=${{ secrets.KUBERNETES_SERVICE_TOKEN }} --certificate-authority YOUR_CA_CERT_PATH rollout restart deployment/YOUR_DEPLOYMENT\n"})}),"\n",(0,a.jsxs)(n.p,{children:["If the Deployment is configured with ",(0,a.jsx)(n.code,{children:"ImagePullStrategy: Always"}),", it will pull the updated image and use it."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},12235:(e,n,t)=>{t.d(n,{WL:()=>d,aQ:()=>u,lz:()=>p,s4:()=>h,xV:()=>l});t(96540);var a=t(36833),s=t(51504),r=t(28747),i=t(1936),o=t(59782),c=t(74848);function l(){return(0,c.jsx)(r.default,{})}function d(){return(0,c.jsx)(i.default,{})}function u(){return(0,c.jsx)(o.default,{})}function p(){return(0,c.jsx)(a.default,{})}function h(){return(0,c.jsx)(s.default,{})}},5594:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var a=t(34164);const s={tabItem:"tabItem__kUE"};var r=t(74848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,i),hidden:t,children:n})}},12976:(e,n,t)=>{t.d(n,{A:()=>k});var a=t(96540),s=t(34164),r=t(22437),i=t(56347),o=t(205),c=t(39758),l=t(49535),d=t(75941);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:s}}=e;return{value:n,label:t,attributes:a,default:s}}))}(t);return function(e){const n=(0,l.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const s=(0,i.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function v(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=p(e),[i,c]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[l,u]=m({queryString:t,groupId:s}),[v,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,d.Dv)(t);return[s,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),x=(()=>{const e=l??v;return h({value:e,tabValues:r})?e:null})();(0,o.A)((()=>{x&&c(x)}),[x]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),f(e)}),[u,f,r]),tabValues:r}}var f=t(92303);const x={tabList:"tabList_fbd4",tabItem:"tabItem_v5XY"};var g=t(74848);function y(e){let{className:n,block:t,selectedValue:a,selectValue:i,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,r.a_)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),s=o[t].value;s!==a&&(l(n),i(s))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>c.push(e),onKeyDown:u,onClick:d,...r,className:(0,s.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function b(e){const n=v(e);return(0,g.jsxs)("div",{className:(0,s.A)("tabs-container",x.tabList),children:[(0,g.jsx)(y,{...e,...n}),(0,g.jsx)(j,{...e,...n})]})}function k(e){const n=(0,f.A)();return(0,g.jsx)(b,{...e,children:u(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(96540);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);