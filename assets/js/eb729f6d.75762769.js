"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[1598],{95725:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"features/connectivity/running-locally","title":"Running An Application Locally","description":"This article describes how to use the SAP Cloud SDK connectivity features during local or CI/CD deployment.","source":"@site/docs-java/features/connectivity/006-running-locally.mdx","sourceDirName":"features/connectivity","slug":"/features/connectivity/running-locally","permalink":"/cloud-sdk/docs/java/features/connectivity/running-locally","draft":false,"unlisted":false,"editUrl":"https://github.com/SAP/cloud-sdk/edit/main/docs-java/features/connectivity/006-running-locally.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"running-locally","title":"Running An Application Locally","hide_title":false,"hide_table_of_contents":false,"sidebar_label":"Running Locally","description":"This article describes how to use the SAP Cloud SDK connectivity features during local or CI/CD deployment.","keywords":["sap","cloud","sdk","java","connectivity","btp","local","ci","cd","business application studio","bas"]},"sidebar":"docsJavaSidebar","previous":{"title":"HTTP Client","permalink":"/cloud-sdk/docs/java/features/connectivity/http-client"},"next":{"title":"Certificate-based Authentication","permalink":"/cloud-sdk/docs/java/features/connectivity/mtls"}}');var o=t(74848),s=t(28453);const a={id:"running-locally",title:"Running An Application Locally",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"Running Locally",description:"This article describes how to use the SAP Cloud SDK connectivity features during local or CI/CD deployment.",keywords:["sap","cloud","sdk","java","connectivity","btp","local","ci","cd","business application studio","bas"]},r=void 0,c={},l=[{value:"Testing With <code>DestinationAccessor</code>",id:"testing-with-destinationaccessor",level:2},{value:"On-Premise Connectivity From Business Application Studio (BAS)",id:"on-premise-connectivity-from-business-application-studio-bas",level:2},{value:"On-Premise Connectivity From Local IDE",id:"on-premise-connectivity-from-local-ide",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Every time before a change of an application is deployed to production, it is crucial to test whether everything is still working as expected.\nFor that, we need to be able to test and/or run applications in non-productive environments, such as on a developer's machine or in a CI/CD pipeline."}),"\n",(0,o.jsx)(n.p,{children:"Commonly, applications rely on certain assumptions regarding the runtime environment.\nFor example, they might assume that certain services are available, or that certain environment variables are set.\nUnfortunately, these assumptions are often not met in non-productive environments."}),"\n",(0,o.jsx)(n.p,{children:"In this article, we will explain different means in the context of connectivity that can help to (unit) test and/or run applications in non-productive environments."}),"\n",(0,o.jsxs)(n.h2,{id:"testing-with-destinationaccessor",children:["Testing With ",(0,o.jsx)(n.code,{children:"DestinationAccessor"})]}),"\n",(0,o.jsxs)(n.p,{children:["When using ",(0,o.jsxs)(n.a,{href:"btp-destination-service",children:["the ",(0,o.jsx)(n.code,{children:"DestinationAccessor"})," API"]}),", applications are usually interested in retrieving destinations from the BTP Destination Service.\nThis functionality, however, assumes that the BTP Destination Service is available (i.e. bound to the application), which is usually not the case when running locally or in a CI/CD pipeline."]}),"\n",(0,o.jsxs)(n.p,{children:["Therefore, the SAP Cloud SDK offers several ways to inject destinations into the ",(0,o.jsx)(n.code,{children:"DestinationAccessor"})," API, depending on the concrete use sceanrio.\nThat way, applications can work even without having access to the BTP Destination Service."]}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"Unit Test Example"}),(0,o.jsxs)(n.p,{children:["In this example, we are going to demonstrate how to use the ",(0,o.jsx)(n.code,{children:"DestinationAccessor"})," API in a unit test."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",metastring:"{7-11,14,16-19} showLineNumbers",children:'import io.vavr.control.Try;\nimport org.junit.jupiter.api.AfterEach;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.parallel.ResourceLock;\n\n@BeforeEach\n@AfterEach\nvoid resetDestinationAccessor() {\n    DestinationAccessor.setLoader(null);\n}\n\n@Test\n@ResourceLock("DestinationAccessor")\nvoid testRemoteSystemInteraction() {\n    var destination = DefaultHttpDestination.builder("http://my-test-system")\n            .authenticationType(AuthenticationType.NO_AUTHENTICATION)\n            .build();\n    DestinationAccessor.prependDestinationLoader((name, options) -> Try.success(destination));\n    // optional sanity check: no matter which name we use, we always get our mocked destination\n    assertThat(DestinationAccessor.getDestination("any-name")).isSameAs(destination);\n\n    // TODO: perform actual test\n}\n'})}),(0,o.jsxs)(n.p,{children:["The code above demonstrates how to easily inject a ",(0,o.jsx)(n.code,{children:"Destination"})," into the ",(0,o.jsx)(n.code,{children:"DestinationAccessor"})," API (line 14).\nPlease note that we are using the ",(0,o.jsxs)(n.a,{href:"pathname:///java-api/v5/com/sap/cloud/sdk/cloudplatform/connectivity/DestinationAccessor.html#prependDestinationLoader(com.sap.cloud.sdk.cloudplatform.connectivity.DestinationLoader)",children:[(0,o.jsx)(n.code,{children:"prependDestinationLoader"})," API"]})," to make sure our mocked destination is always returned, no matter which other ",(0,o.jsx)(n.code,{children:"DestinationLoader"})," instances might still be registered."]}),(0,o.jsxs)(n.p,{children:["Additionally, it is very important to remember that the ",(0,o.jsx)(n.code,{children:"DestinationAccessor"})," is based on ",(0,o.jsx)(n.strong,{children:"static state"}),". ",(0,o.jsx)("br",{}),"\nIn other words: Once we are injecting a ",(0,o.jsx)(n.code,{children:"Destination"})," (as in line 14), it will be ",(0,o.jsx)(n.strong,{children:"used for all subsequent calls"})," to the ",(0,o.jsx)(n.code,{children:"DestinationAccessor"})," API - even when our initial test is already finished."]}),(0,o.jsxs)(n.p,{children:["Therefore, it is crucial to ",(0,o.jsxs)(n.strong,{children:["reset the ",(0,o.jsx)(n.code,{children:"DestinationAccessor"})]})," before ",(0,o.jsx)(n.strong,{children:"and"})," after each test (as in lines 3 to 7).\nThat way, we are avoiding hard-to-debug issues that are only visible when running multiple tests in a specific order."]}),(0,o.jsxs)(n.p,{children:["Furthermore, it is also recommended to use ",(0,o.jsxs)(n.a,{href:"https://junit.org/junit5/docs/current/api/org.junit.jupiter.api/org/junit/jupiter/api/parallel/ResourceLock.html",children:["JUnit5's ",(0,o.jsx)(n.code,{children:"@ResourceLock"})]})," when manipulating static state (as in this example).\nUsing this annotation will prevent our tests from running concurrently, which could lead to unexpected results due to race conditions."]})]}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:"Local Run Example"}),(0,o.jsxs)(n.p,{children:["In this example, we are going to demonstrate how to use the ",(0,o.jsx)(n.code,{children:"DestinationAccessor"})," API when running an application locally.\nHereby, we are making use of the ",(0,o.jsx)(n.a,{href:"pathname:///java-api/v5/com/sap/cloud/sdk/cloudplatform/connectivity/EnvVarDestinationLoader.html",children:(0,o.jsx)(n.code,{children:"EnvVarDestinationLoader"})}),", which converts an environment variable into a ",(0,o.jsx)(n.code,{children:"Destination"}),".\nThis class is always and automatically available, so that no code changes are required to make the following example work."]}),(0,o.jsx)(n.p,{children:"First, we need to define our destination configuration like follows:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'export destinations=\'[{name: "my-destination", url: "https://my-remote-service.com", Authentication: "NoAuthentication" }]\'\n'})}),(0,o.jsx)(n.admonition,{title:"Limited Authentication Support",type:"caution",children:(0,o.jsxs)(n.p,{children:["Destinations created that way provide support for ",(0,o.jsx)(n.a,{href:"pathname:///java-api/v5/com/sap/cloud/sdk/cloudplatform/connectivity/AuthenticationType.html#NO_AUTHENTICATION",children:(0,o.jsx)(n.code,{children:"NO_AUTHENTICATION"})})," and ",(0,o.jsx)(n.a,{href:"pathname:///java-api/v5/com/sap/cloud/sdk/cloudplatform/connectivity/AuthenticationType.html#BASIC_AUTHENTICATION",children:(0,o.jsx)(n.code,{children:"BASIC_AUTHENTICATION"})})," only."]})}),(0,o.jsxs)(n.p,{children:["In the command above, we are defining a single destination that is called ",(0,o.jsx)(n.em,{children:"my-destination"})," and points to ",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.a,{href:"https://my-remote-service.com",children:"https://my-remote-service.com"})})," using no authentication.\nPlease note that the ",(0,o.jsx)(n.code,{children:"destinations"})," environment variable is a JSON array, which means that we can define multiple destinations at once."]}),(0,o.jsxs)(n.p,{children:["Once that is done, we can now start our application ",(0,o.jsx)(n.strong,{children:"in the same shell"})," (i.e. where the exported environment variable is available). ",(0,o.jsx)("br",{}),"\nNow, whenever our application uses ",(0,o.jsx)(n.code,{children:'DestinationAccessor.getDestination("my-destination")'}),", it will receive the destination we defined in the environment variable instead of trying to retrieve it from the BTP Destination Service."]})]}),"\n",(0,o.jsx)(n.h2,{id:"on-premise-connectivity-from-business-application-studio-bas",children:"On-Premise Connectivity From Business Application Studio (BAS)"}),"\n",(0,o.jsxs)(n.p,{children:["If you are developing an application in the ",(0,o.jsx)(n.strong,{children:"Business Application Studio (BAS)"}),", and want to reach On-Premise systems, perform the following steps:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Make sure your BAS instance is part of the same Cloud Foundry space as your Cloud Connector."}),"\n",(0,o.jsxs)(n.li,{children:["Add properties ",(0,o.jsx)(n.code,{children:"WebIDEEnabled"})," and ",(0,o.jsx)(n.code,{children:"HTML5.DynamicDestination"})," to your On-Premise destination with the value ",(0,o.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["In BAS, configure your ",(0,o.jsx)(n.code,{children:"destinations"})," environment variable as follows:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "type": "HTTP",\n    "name": "<DESTINATION-NAME>",\n    "url": "http://<DESTINATION-NAME>.dest",\n    "ProxyHost": "localhost",\n    "ProxyPort": 8887\n  }\n]\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Please refer to ",(0,o.jsx)(n.a,{href:"/docs/js/guides/bas",children:"the BAS connectivity guide"})," created for the SAP Cloud SDK for JavaScript to get more information and a detailed description of the technical background.\nThe information there also applies to the SAP Cloud SDK for Java."]}),"\n",(0,o.jsx)(n.h2,{id:"on-premise-connectivity-from-local-ide",children:"On-Premise Connectivity From Local IDE"}),"\n",(0,o.jsx)(n.p,{children:"The SAP BTP connectivity service builds the connection between SAP BTP and the On-premise network.\nThat is why it has strong built-in restrictions to allow it only to be called from within the SAP Business Technology Platform.\nIf you call the connectivity service from your local machine, you will encounter a connection timeout.\nWe'll therefore apply port forwarding via SSH to simulate that your localhost plays the cloud app."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Deploy your app to the SAP BTP once."}),"\n",(0,o.jsxs)(n.li,{children:["Enable SSH access to your app container with the ",(0,o.jsx)(n.code,{children:"cf"})," CLI:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cf enable-ssh app-name\ncf restart app-name\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Inspect the value of the entry ",(0,o.jsx)(n.code,{children:"connectivity"})," of your ",(0,o.jsx)(n.code,{children:"VCAP_SERVICES"})," and take note of the values of the fields"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"credentials.onpremise_proxy_port"})," (we will refer to the value as ",(0,o.jsx)(n.em,{children:"proxy-port"})," hereafter)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"credentials.onpremise_proxy_host"})," (we will refer to the value as ",(0,o.jsx)(n.em,{children:"proxy-host"})," hereafter)"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Create an SSH session to your app container with the following command and let the session opened:"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cf ssh app-name -L proxy-port:proxy-host:proxy-port\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Copy over the ",(0,o.jsx)(n.code,{children:"VCAP_SERVICES"})," of your actually deployed app to your local machine so that the app can access it.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Tip"})," Many IDEs provide support for using the content of a file (e.g. ",(0,o.jsx)(n.code,{children:"default-env.json"}),") as environment variables when starting your application.\nThis way, you can avoid the hustle of creating the environment variables yourself.\nPlease refer to the documentation of your IDE to learn more about this feature."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Replace the value of the field ",(0,o.jsx)(n.code,{children:"VCAP_SERVICES.connectivity.credentials.onpremise_proxy_host"})," with ",(0,o.jsx)(n.code,{children:"localhost"}),".","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"That way, the SAP Cloud SDK will use the SSH tunnel instead of the real connectivity service."}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(96540);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);