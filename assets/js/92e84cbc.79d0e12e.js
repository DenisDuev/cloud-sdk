"use strict";(self.webpackChunksap_cloud_sdk_documentation=self.webpackChunksap_cloud_sdk_documentation||[]).push([[98031],{67947:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"features/connectivity/http-client","title":"Generic HTTP Client","description":"How to use the generic http client for untyped requests","source":"@site/docs-js_versioned_docs/version-v1/features/connectivity/generic-http-client.mdx","sourceDirName":"features/connectivity","slug":"/features/connectivity/http-client","permalink":"/cloud-sdk/docs/js/v1/features/connectivity/http-client","draft":false,"unlisted":false,"editUrl":"https://github.com/SAP/cloud-sdk/edit/main/docs-js_versioned_docs/version-v1/features/connectivity/generic-http-client.mdx","tags":[],"version":"v1","frontMatter":{"id":"http-client","title":"Generic HTTP Client","sidebar_label":"Generic HTTP Client","description":"How to use the generic http client for untyped requests","keywords":["sap","cloud","sdk","odata","HTTP","JavaScript","TypeScript"]},"sidebar":"docsJsSidebar","previous":{"title":"Proxies","permalink":"/cloud-sdk/docs/js/v1/features/connectivity/proxies"},"next":{"title":"On-Premise Systems","permalink":"/cloud-sdk/docs/js/v1/features/connectivity/on-premise"}}');var s=t(74848),r=t(28453);const a={id:"http-client",title:"Generic HTTP Client",sidebar_label:"Generic HTTP Client",description:"How to use the generic http client for untyped requests",keywords:["sap","cloud","sdk","odata","HTTP","JavaScript","TypeScript"]},o=void 0,d={},c=[{value:"What Is the Generic HTTP Client?",id:"what-is-the-generic-http-client",level:2},{value:"How to Use It",id:"how-to-use-it",level:2},{value:"When to Use It",id:"when-to-use-it",level:2},{value:"Headers and Query Parameters from Different Origins",id:"headers-and-query-parameters-from-different-origins",level:2},{value:"Custom Headers and Query Parameters",id:"custom-headers-and-query-parameters",level:3},{value:"Headers and Query Parameters from Destination",id:"headers-and-query-parameters-from-destination",level:3},{value:"Provide Headers and Query Parameters with Origin information",id:"provide-headers-and-query-parameters-with-origin-information",level:3},{value:"Encoding",id:"encoding",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"what-is-the-generic-http-client",children:"What Is the Generic HTTP Client?"}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/v1/features/odata/execute-request",children:"Executing a request using a generated OData client"})," section, we explained how to make OData requests using the generated OData client.\nThis client is the highest layer of convenience and type safety for the user.\nBelow the OData client uses the generic HTTP client of the SAP Cloud SDK.\nFor the final HTTP calls, the SAP Cloud SDK for JavaScript uses the axios library."]}),"\n",(0,s.jsx)(n.p,{children:"In this document, we explain when and how to use the middle layer directly.\nDifferent clients serve different purposes:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"OData Client:"}),"\nProvides strong typing for the request (payload, select, filter, etc.) and response.\nFor each OData service, a separate client needs to be generated which defines the types and methods for this service.\nThe client takes care of deserializing your request to a URL and JSON payload as well as serializing the response.\nThe generated payload and URL are passed to the Generic HTTP Client."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Generic HTTP Client:"}),"\nAdds SAP infrastructure-specific functionality on top of a standard HTTP Client.\nAll OData services use the same generic HTTP client, so it contains no service-specific information.\nThe client handles connectivity related issues such as:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/v1/features/connectivity/destinations",children:"Destination lookup"})}),"\n",(0,s.jsxs)(n.li,{children:["Connections to ",(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/v1/features/connectivity/on-premise",children:"SAP S/4HANA On-premise"})," via the connectivity service"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/v1/features/connectivity/proxies",children:"Web proxies"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["In the end, all information from the destination, connectivity service, and proxy configuration ends up in header fields and ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/proxy-agent",children:"proxy-agents"}),".\nThe information goes one level down to the axios client."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"axios HTTP Client:"}),"\nIs a widely used open-source ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/axios",children:"HTTP client for node"}),".\nThis client executes the actual HTTP requests in the end."]}),"\n",(0,s.jsx)(n.h2,{id:"how-to-use-it",children:"How to Use It"}),"\n",(0,s.jsxs)(n.p,{children:["To make a request using the Generic HTTP client use the ",(0,s.jsx)(n.code,{children:"executeHttpRequest"})," function."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"executeHttpRequest(destination, requestConfig, httpRequestOptions);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"destination"})," argument is either a full ",(0,s.jsx)(n.a,{href:"pathname:///api/v1/interfaces/sap_cloud_sdk_connectivity.Destination.html",children:"destination object"}),", that you have already fetched or an ",(0,s.jsx)(n.a,{href:"pathname:///api/v1/interfaces/sap_cloud_sdk_connectivity.DestinationFetchOptions.html",children:"object containing a destination name and an optional JWT"}),".\nIn the latter case, the SAP Cloud SDK fetches the destination for you.\nFor more details, see ",(0,s.jsx)(n.a,{href:"/cloud-sdk/docs/js/v1/features/connectivity/destinations",children:"here"}),".\nThe ",(0,s.jsx)(n.a,{href:"pathname:///api/v1/modules/sap_cloud_sdk_http_client#HttpRequestConfig.html",children:"request configuration"})," argument contains the request configuration.\nA minimal configuration would look like this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-JSON",children:"{\n  method: 'get',\n  params: {\n    a: 'a',\n    b: 'b'\n  },\n  ...\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note that you can also give values for ",(0,s.jsx)(n.code,{children:"url"})," in the request configuration.\nThe values you give in the request configuration will be merged with ones related to the destination:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"{\n  ...destinationRequestConfig,\n  ...customRequestConfig,\n  headers: {\n   ...destinationRequestConfig.headers,\n   ...customRequestConfig.headers\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["For keys that exist for both objects, the value from the custom request configuration will be used.\nFor example, a request configuration with ",(0,s.jsx)(n.code,{children:"authorization"})," headers will overwrite the authorization header information from the destination."]}),"\n",(0,s.jsxs)(n.p,{children:["You can also pass an optional third parameter ",(0,s.jsx)(n.code,{children:"httpRequestOptions"}),", where you can indicate, for example, whether the SAP Cloud SDK should fetch ",(0,s.jsx)(n.code,{children:"CSRF"})," token for a non-GET request.\nFor a GET request, the ",(0,s.jsx)(n.code,{children:"CSRF"})," token is not fetched and this option is ignored."]}),"\n",(0,s.jsxs)(n.p,{children:["Below is an example of the ",(0,s.jsx)(n.code,{children:"httpRequestOptions"})," to delegate the ",(0,s.jsx)(n.code,{children:"CSRF"})," token fetching to the SAP Cloud SDK."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-JSON",children:"{\n     fetchCsrfToken: true\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["By default, the value of ",(0,s.jsx)(n.code,{children:"fetchCsrfToken"})," is false."]}),"\n",(0,s.jsx)(n.h2,{id:"when-to-use-it",children:"When to Use It"}),"\n",(0,s.jsx)(n.p,{children:"You should consider the Generic HTTP client if:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["You need to use an unsupported feature by the typed OData Client like ",(0,s.jsx)(n.code,{children:"upsert"})," for example.\nWith this, you can profit from the aforementioned convenience in connectivity."]}),"\n",(0,s.jsx)(n.li,{children:"You want to ping a service or trigger a function import without a complicated payload.\nIn such a case the size of a full data model of the typed client is perhaps not worth the benefits."}),"\n",(0,s.jsx)(n.li,{children:"You want to call a non-OData service that has no service definition."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"You should consider the OData client if:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You have to build complicated filter, selection, and/or expand conditions.\nHere you will highly benefit from the help of the OData client."}),"\n",(0,s.jsxs)(n.li,{children:["You want to update or create new entities.\nThe OData Client has built-in ",(0,s.jsx)(n.code,{children:"ETag"})," versions handling.\nWith the generic client, you have to manage versions on your own."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"headers-and-query-parameters-from-different-origins",children:"Headers and Query Parameters from Different Origins"}),"\n",(0,s.jsxs)(n.p,{children:["As partially described in the ",(0,s.jsx)(n.a,{href:"./destinations#additional-headers-and-query-parameters-on-destinations",children:"destination guide"}),", there are multiple possible origins for query parameters:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Provided by the user on the request level.\nThese parameters are referred to as ",(0,s.jsx)(n.code,{children:"custom"})," parameters."]}),"\n",(0,s.jsx)(n.li,{children:"Defined by the destination object or properties."}),"\n",(0,s.jsxs)(n.li,{children:["Introduced by the SAP Cloud SDK.\nThese parameters are referred to as ",(0,s.jsx)(n.code,{children:"internal"})," parameters."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In case there are parameters with the same key from multiple origins the priority is:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Custom"})," headers and parameters"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Destination"})," headers and parameters"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Internal"})," headers and parameters"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"custom-headers-and-query-parameters",children:"Custom Headers and Query Parameters"}),"\n",(0,s.jsx)(n.p,{children:"The code snippets demonstrate how to provide custom headers and parameters:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"executeHttpRequest(myDestination, {\n  headers: {\n    apiKey: 'my-api-key'\n  },\n  params: {\n    myParam: 'my-param'\n  }\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"headers-and-query-parameters-from-destination",children:"Headers and Query Parameters from Destination"}),"\n",(0,s.jsxs)(n.p,{children:["You set these parameters on the destination object as described ",(0,s.jsx)(n.a,{href:"./destinations#additional-headers-and-query-parameters-on-destinations",children:"here"}),".\nThe example below shows how to get:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["parsed parameters in the ",(0,s.jsx)(n.code,{children:"queryParameters"})," property of the destination object"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"authentication"})," value from the destination object, which will be used for the authentication header"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const { queryParameters, authentication } = await getDestination({\n  destinationName: 'myDestination',\n  jwt: 'yourJwt'\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"provide-headers-and-query-parameters-with-origin-information",children:"Provide Headers and Query Parameters with Origin information"}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"This is an SAP Cloud SDK version 2.x feature."})}),"\n",(0,s.jsx)(n.p,{children:"In some situations you want to define the priority of headers and parameters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You want to enforce a hard-coded API key/JWT and ignore the ones from e.g. the destination"}),"\n",(0,s.jsx)(n.li,{children:"You want a default query parameter, which can be overwritten by the destination properties"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Check the example below, how you can define the headers and parameters with origin information:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"executeHttpRequestWithOrigin(myDestination, {\n  headers: {\n    custom: { apiKey: 'custom-header' },\n    requestConfig: { apiKey: 'default-header' }\n  },\n  params: {\n    custom: { myParam: 'custom-param' },\n    requestConfig: { myParam: 'default-param' }\n  }\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"encoding",children:"Encoding"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"This section applies to version 2 of the SAP Cloud SDK.\nFor version 1 of the SAP Cloud SDK, encoding is done on OData-related query parameters without a way to configure it."})}),"\n",(0,s.jsxs)(n.p,{children:["In the end, query parameters end up in the URL to the target system.\nTherefore, special characters with a meaning in a URL need to be ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Uniform_Resource_Identifier",children:"% encoded"}),".\nThe SAP Cloud SDK takes care of this encoding depending on the origin you use.\nFor calls executed via a typed client and generic HTTP client the encoding is done as:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Custom"})," parameters are not encoded.\nThe idea behind this is to give you a way to send parameters with the highest priority to the target system as they are."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Destination"})," parameters are encoded."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Internal"})," parameters are encoded."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For the ",(0,s.jsx)(n.code,{children:"executeHttpRequest"})," method, an option is available to adjust the behavior."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const parameterEncoder = function (\n  params: Record<string, any>\n): Record<string, any> {\n  // your custom implementation\n};\nexecuteHttpRequest(destination, { parameterEncoder });\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"parameterEncoder"})," function is applied to the keys and values of all parameters of the request.\nIn case you need to encode all parameters including custom ones, we exported a ",(0,s.jsx)(n.code,{children:"encodeAllParameters"})," method to do that.\nPass this method as the ",(0,s.jsx)(n.code,{children:"parameterEncoder"})," to the ",(0,s.jsx)(n.code,{children:"executeHttpRequest"})," call."]}),"\n",(0,s.jsx)(n.p,{children:"Note that this option is not available for the OData and OpenApi clients.\nThe typed clients take care of encoding already, and an additional encoding layer would lead to errors."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);